name: API library tests

on:
  push:
    branches:
      - main
      - '[0-9]+\.[0-9]+'
  pull_request:
  workflow_dispatch:
    inputs:
      pr:
        description: 'PR number in mautic/mautic to test against'
        required: false
  schedule:
    # Run every day at 10 AM UTC to discover potential issues with recent changes to Mautic itself
    - cron: '0 10 * * *'

jobs:
  phpunit:
    runs-on: ubuntu-20.04
    name: PHPUnit tests

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mautictest
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      mailhog:
        image: mailhog/mailhog:latest
        ports:
          - 1025:1025
          
      redis:
        image: redis:6
        ports:
          - 6379:6379

      mautic:
        image: mautic/mautic:v4-apache
        env:
          MAUTIC_DB_HOST: mysql
          MAUTIC_DB_USER: root
          MAUTIC_DB_PASSWORD: root
          MAUTIC_DB_NAME: mautictest
          MAUTIC_RUN_CRON_JOBS: "false"
        ports:
          - 80:80
        options:
          --health-cmd="curl --fail http://localhost || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
    - uses: actions/checkout@v3

    - name: Copy our API library config into the tests/ folder
      run: cp -a ./.github/ci-files/local.config.php tests/local.config.php

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.0
        ini-values: session.save_handler=redis, session.save_path="tcp://127.0.0.1:6379"
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: pcov

    - name: Set SYMFONY_ENV to test
      run: echo "SYMFONY_ENV=test" >> $GITHUB_ENV

    - name: Prepare Mautic installation
      run: |
        sudo docker cp /tmp/ci-files/prepare_mautic.sh mautic:/tmp/prepare_mautic.sh
        sudo docker exec -it mautic "bash /tmp/prepare_mautic.sh"

    - name: Install dependencies
      run: |
        composer validate --strict
        composer install --prefer-dist --no-progress

    - name: Run tests
      run: vendor/bin/paratest -p 3 --coverage-clover coverage.xml

#    - name: Upload code coverage
#      run: bash <(curl -s https://codecov.io/bash)
#
#    - name: Upload logs as artifacts
#      uses: actions/upload-artifact@v2
#      if: always()
#      with:
#        name: mautic-logs
#        path: /var/www/html/var/logs/
#
#    - name: Slack Notification if tests fail
#      uses: rtCamp/action-slack-notify@v2
#      if: ${{ failure() && github.event_name == 'schedule' }}
#      env:
#        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
#        SLACK_MESSAGE: 'The daily API library tests against mautic/mautic have failed. Most likely a PR was merged recently which introduced a regression of some sort.'

  cs:
    runs-on: ubuntu-20.04
    name: CS tests

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.0
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql

    - name: Install dependencies
      run: |
        composer validate --strict
        composer install --prefer-dist --no-progress

    - name: Run CS tests
      run: vendor/bin/php-cs-fixer fix --config=.php_cs -v --dry-run --using-cache=no --show-progress=dots --diff $(git diff -- '*.php' --name-only --diff-filter=ACMRTUXB "HEAD~..HEAD")
